[
  {
    "name": "Cassandra",
    "modelType": "Cassandra",
    "description": {
      "short": "The Cassandra output uses the generic implementation with DataFrames.",
      "long": "Datastax Spark Connector:  goo.gl/PO4k4F",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-Cassandra"
    },
    "properties": [
      {
        "propertyId": "connectionHost",
        "propertyName": "_CONTACT_POINT_",
        "propertyType": "text",
        "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
        "default": "localhost",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-cassandra-connectionHost"
      },
      {
        "propertyId": "connectionPort",
        "propertyName": "_PORT_",
        "propertyType": "text",
        "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
        "default": "9042",
        "required": true,
        "tooltip": "Cassandra port",
        "hidden": false,
        "qa": "fragment-details-cassandra-connectionPort"
      },
      {
        "propertyId": "keyspace",
        "propertyName": "_KEYSPACE_",
        "propertyType": "text",
        "regexp": "",
        "default": "sparta",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-cassandra-keyspace"
      },
      {
        "propertyId": "cluster",
        "propertyName": "_CLUSTER_",
        "propertyType": "text",
        "regexp": "",
        "default": "sparta",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-cassandra-cluster"
      },
      {
        "propertyId": "sparkProperties",
        "propertyName": "_SPARK_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-cassandra-spark",
        "fields": [
          {
            "propertyId": "sparkPropertyKey",
            "propertyName": "_SPARK_PROPERTY_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "spark.cassandra.connection.keep_alive_ms",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-cassandra-sparkPropertyKey"
          },
          {
            "propertyId": "sparkPropertyValue",
            "propertyName": "_SPARK_PROPERTY_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "180000",
            "hidden": false,
            "required": true,
            "qa": "fragment-details-cassandra-sparkPropertyValue"
          }
        ]
      },
      {
        "propertyId": "saveOptions",
        "propertyName": "_CASSANDRA_SAVE_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-cassandra-save-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_SAVE_OPTIONS_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-cassandra-saveOptionsKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_SAVE_OPTIONS_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-cassandra-saveOptionsValue"
          }
        ]
      }
    ]
  },
  {
    "name": "Elasticsearch",
    "modelType": "ElasticSearch",
    "description": {
      "short": "The Elasticsearch output uses the generic implementation with DataFrames.",
      "long": "Elasticsearch is a search server based on Lucene. It provides a distributed, multitenant-capable full-text search engine with a RESTful web interface and schema-free JSON documents.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-Elasticsearch"
    },
    "properties": [
      {
        "propertyId": "nodes",
        "propertyName": "_NODES_",
        "propertyType": "list",
        "default": "",
        "required": true,
        "hidden": false,
        "limit": 0,
        "tooltip": "",
        "qa": "fragment-details-elasticSearch-nodes",
        "fields": [
          {
            "propertyId": "node",
            "propertyName": "_HOST_",
            "propertyType": "text",
            "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
            "default": "localhost",
            "required": true,
            "qa": "fragment-details-elasticSearch-node"
          },
          {
            "propertyId": "httpPort",
            "propertyName": "_HTTP_PORT_",
            "propertyType": "text",
            "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
            "default": "9200",
            "required": true,
            "qa": "fragment-details-elasticSearch-httpPort"
          }
        ]
      },
      {
        "propertyId": "clusterName",
        "propertyName": "_CLUSTERNAME_",
        "propertyType": "text",
        "regexp": "",
        "default": "elasticsearch",
        "required": true,
        "qa": "fragment-details-elasticSearch-clusterName"
      },
      {
        "propertyId": "indexMapping",
        "propertyName": "_INDEX_MAPPING_",
        "propertyType": "text",
        "regexp": "",
        "default": "sparta",
        "tooltip": "Value will be used as mapping name for indexing.",
        "required": false,
        "qa": "fragment-details-elasticSearch-indexMapping"
      },
      {
        "propertyId": "saveOptions",
        "propertyName": "_ELASTICSEARCH_SAVE_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-elasticsearch-save-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_SAVE_OPTIONS_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-elasticsearch-saveOptionsKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_SAVE_OPTIONS_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-elasticsearch-saveOptionsValue"
          }
        ]
      }
    ]
  },
  {
    "name": "MongoDb",
    "modelType": "MongoDb",
    "description": {
      "short": "MongoDB is an open-source document database, and the leading NoSQL database.",
      "long": "MongoDB is an open-source document database that provides high performance, high availability, and automatic scaling.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-MongoDB"
    },
    "properties": [
      {
        "propertyId": "hosts",
        "propertyName": "_HOSTS_",
        "propertyType": "list",
        "default": "",
        "required": true,
        "tooltip": "This section let us specify the parameters needed to establish a MongoDB connection, with different replica set or with sharding.",
        "qa": "fragment-details-mongoDb-hosts",
        "fields": [
          {
            "propertyId": "host",
            "propertyName": "_HOST_",
            "propertyType": "text",
            "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
            "default": "localhost",
            "hidden": false,
            "required": true,
            "qa": "fragment-details-mongoDb-hostName"
          },
          {
            "propertyId": "port",
            "propertyName": "_PORT_",
            "propertyType": "text",
            "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
            "default": "27017",
            "hidden": false,
            "required": true,
            "qa": "fragment-details-mongoDb-port"
          }
        ]
      },
      {
        "propertyId": "dbName",
        "propertyName": "_DATEBASE_NAME_",
        "propertyType": "text",
        "regexp": "",
        "default": "sparta",
        "required": true,
        "tooltip": "Default value set to sparta.",
        "qa": "fragment-details-mongoDb-dbName"
      }
    ]
  },
  {
    "name": "Parquet",
    "modelType": "Parquet",
    "description": {
      "short": "Parquet output uses the generic implementation with DataFrames.",
      "long": "Apache Parquet is a columnar storage format available to any project in the Hadoop ecosystem, regardless of the choice of data processing framework, data model or programming language.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/latSPARTA0x11est/Outputs#Outputs-Parquet"
    },
    "properties": [
      {
        "propertyId": "path",
        "propertyName": "_PATH_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-parquet-path"
      },
      {
        "propertyId": "saveOptions",
        "propertyName": "_PARQUET_SAVE_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-parquet-save-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_SAVE_OPTIONS_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-parquet-saveOptionsKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_SAVE_OPTIONS_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-parquet-saveOptionsValue"
          }
        ]
      }
    ]
  },
  {
    "name": "CSV",
    "modelType": "Csv",
    "description": {
      "short": "Persist your data in HDFS with CSV format.",
      "long": "https://github.com/databricks/spark-csv",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-CSV"
    },
    "properties": [
      {
        "propertyId": "path",
        "propertyName": "_PATH_",
        "propertyType": "text",
        "regexp": "^[a-zA-Z0-9:_\\.\\-\\+/\\\\]{2,}\\.csv$",
        "default": "path_to_csv.csv",
        "required": true,
        "qa": "fragment-details-csv-path"
      },
      {
        "propertyId": "header",
        "propertyName": "_HEADER_",
        "propertyType": "boolean",
        "regexp": "true|false",
        "default": false,
        "required": false,
        "tooltip": "Sets if a header is attached to the output file.",
        "qa": "fragment-details-csv-header"
      },
      {
        "propertyId": "inferSchema",
        "propertyName": "_INFER_SCHEMA_",
        "propertyType": "boolean",
        "regexp": "true|false",
        "default": false,
        "required": false,
        "tooltip": "If checked, the data schema will be attached to the output file.",
        "qa": "fragment-details-csv-inferSchema"
      },
      {
        "propertyId": "delimiter",
        "propertyName": "_DELIMITER_",
        "propertyType": "text",
        "tooltip": "Any character is accepted except: \\ \" #",
        "regexp": "[^\"#\\\\]",
        "maxlength": "1",
        "default": ",",
        "trim": false,
        "required": false,
        "qa": "fragment-details-csv-delimiter"
      },
      {
        "propertyId": "saveOptions",
        "propertyName": "_CSV_SAVE_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-csv-save-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_SAVE_OPTIONS_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-csv-saveOptionsKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_SAVE_OPTIONS_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-csv-saveOptionsValue"
          }
        ]
      }
    ]
  },
  {
    "name": "FileSystem",
    "modelType": "FileSystem",
    "description": {
      "short": "Saves the processed data to file into any storage service",
      "long": "This output enables you to save the processed data in any HDFS-compatible storage service such as HDFS itself, Amazon S3, Azure or locally.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-Filesystem"
    },
    "properties": [
      {
        "propertyId": "path",
        "propertyName": "_PATH_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-filesystem-path"
      },
      {
        "propertyId": "outputFormat",
        "propertyName": "_OUTPUT_FORMAT_",
        "propertyType": "select",
        "regexp": "json|row",
        "values": [
          {
            "label": "Json",
            "value": "json"
          },
          {
            "label": "Row",
            "value": "row"
          }
        ],
        "default": "json",
        "required": true,
        "tooltip": "Sets whether the output should be written as Json or plain text with just the row values.",
        "qa": "fragment-details-filesystem-format"
      },
      {
        "propertyId": "delimiter",
        "propertyName": "_DELIMITER_",
        "propertyType": "text",
        "tooltip": "Only eligible if output format is set to Row. Any character is accepted except: \\ \" #",
        "regexp": "[^\"#\\\\]",
        "maxLength": "1",
        "default": ",",
        "trim": false,
        "required": false,
        "qa": "fragment-details-filesystem-delimiter"
      }
    ]
  },
  {
    "name": "Avro",
    "modelType": "Avro",
    "description": {
      "short": "Avro output uses the databricks implementation with DataFrames.",
      "long": "Avro is a remote procedure call and data serialization framework developed within Apache's Hadoop project. It uses JSON for defining data types and protocols, and serializes data in a compact binary format. It can provide both a serialization format for persistent data, and a wire format for communication between Hadoop nodes.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/latSPARTA0x11est/Outputs#Outputs-Avro"
    },
    "properties": [
      {
        "propertyId": "path",
        "propertyName": "_PATH_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-avro-path"
      },
      {
        "propertyId": "saveOptions",
        "propertyName": "_AVRO_SAVE_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-avro-save-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_SAVE_OPTIONS_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-avro-saveOptionsKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_SAVE_OPTIONS_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-avro-saveOptionsValue"
          }
        ]
      }
    ]
  },
  {
    "name": "Jdbc",
    "modelType": "Jdbc",
    "description": {
      "short": "With one jdbc connection it's possible to write data into SQL Databases.",
      "long": "To use a JDBC driver it's necessary to add the dependency to the system classpath. To add the dependency to the system classpath setup the file spark-defaults.conf in every instance of the cluster.",
      "learnMore": "http://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources"
    },
    "properties": [
      {
        "propertyId": "url",
        "propertyName": "_JDBC_URL_",
        "propertyType": "text",
        "regexp": "",
        "width": 12,
        "align": "left",
        "default": "jdbc:postgresql://dbserver:port/database?user=postgres",
        "required": true,
        "tooltip": "Url to connect to one relational Database with jdbc",
        "qa": "fragment-details-jdbc-url"
      },
      {
        "propertyId": "batchsize",
        "propertyName": "_JDBC_BATCH_SIZE_",
        "propertyType": "text",
        "regexp": "",
        "width": 6,
        "align": "left",
        "default": "1000",
        "required": false,
        "tooltip": "Number of insert or upsert statements that are sent to Database on each partition",
        "qa": "fragment-details-jdbc-batch-size"
      },
      {
        "propertyId": "driver",
        "propertyName": "_JDBC_DRIVER_",
        "propertyType": "text",
        "regexp": "",
        "width": 6,
        "align": "right",
        "default": "",
        "required": false,
        "tooltip": "Driver class, this property has priority to URL",
        "qa": "fragment-details-jdbc-driver"
      },
      {
        "propertyId": "numPartitions",
        "propertyName": "_JDBC_NUM_PARTITIONS_",
        "propertyType": "text",
        "regexp": "",
        "width": 6,
        "align": "left",
        "default": "",
        "required": false,
        "tooltip": "Number of partitions, defaults to SparkContext.defaultParallelism when unset",
        "qa": "fragment-details-jdbc-driver"
      },
      {
        "propertyId": "saveOptions",
        "propertyName": "_JDBC_SAVE_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-jdbc-save-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_SAVE_OPTIONS_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-jdbc-saveOptionsKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_SAVE_OPTIONS_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-jdbc-saveOptionsValue"
          }
        ]
      }
    ]
  },
  {
    "name": "Postgres",
    "modelType": "Postgres",
    "description": {
      "short": "With one Postgres connection it's possible to write data into Postgres Databases.",
      "long": "Optimize Jdbc write times, use function COPY IN available in Postgres library",
      "learnMore": "http://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources"
    },
    "properties": [
      {
        "propertyId": "url",
        "propertyName": "_JDBC_URL_",
        "propertyType": "text",
        "width": 12,
        "align": "left",
        "default": "jdbc:postgresql://dbserver:port/database?user=postgres",
        "required": true,
        "tooltip": "Url to connect to one Postgres Database",
        "qa": "fragment-details-postgres-url"
      },
      {
        "propertyId": "delimiter",
        "propertyName": "_POSTGRES_DELIMITER_",
        "propertyType": "text",
        "width": 6,
        "align": "right",
        "default": "\t",
        "required": false,
        "tooltip": "Delimiter character used when transform to CSV, it's necessary that the events not contains the character",
        "qa": "fragment-details-postgres-delimiter"
      },
      {
        "propertyId": "newLineSubstitution",
        "propertyName": "_POSTGRES_NEW_LINE_SUBSTITUTION_",
        "propertyType": "text",
        "width": 6,
        "align": "left",
        "default": " ",
        "required": false,
        "tooltip": "Character used to substitute the new line character in the events",
        "qa": "fragment-details-postgres-new-line-substitution"
      },
      {
        "propertyId": "encoding",
        "propertyName": "_POSTGRES_ENCODING_",
        "propertyType": "text",
        "regexp": "",
        "width": 6,
        "align": "right",
        "default": "UTF8",
        "required": false,
        "tooltip": "Charset encoding to use during saving",
        "qa": "fragment-details-postgres-encoding"
      },
      {
        "propertyId": "bufferSize",
        "propertyName": "_POSTGRES_BUFFER_SIZE_",
        "propertyType": "text",
        "width": 6,
        "align": "left",
        "default": "65536",
        "required": false,
        "tooltip": "Number of characters to buffer and push over network to server at once on insert mode",
        "qa": "fragment-details-postgres-buffer-size"
      },
      {
        "propertyId": "batchsize",
        "propertyName": "_JDBC_BATCH_SIZE_",
        "propertyType": "text",
        "regexp": "",
        "width": 6,
        "align": "right",
        "default": "1000",
        "required": false,
        "tooltip": "Number of upsert statements that are sent to Database on each partition",
        "qa": "fragment-details-jdbc-batch-size"
      },
      {
        "propertyId": "driver",
        "propertyName": "_JDBC_DRIVER_",
        "propertyType": "text",
        "regexp": "",
        "width": 6,
        "align": "left",
        "default": "",
        "required": false,
        "tooltip": "Driver class, this property has priority to URL",
        "qa": "fragment-details-jdbc-driver"
      },
      {
        "propertyId": "numPartitions",
        "propertyName": "_JDBC_NUM_PARTITIONS_",
        "propertyType": "text",
        "regexp": "",
        "width": 6,
        "align": "right",
        "default": "",
        "required": false,
        "tooltip": "Number of partitions, defaults to SparkContext.defaultParallelism when unset",
        "qa": "fragment-details-jdbc-driver"
      },
      {
        "propertyId": "saveOptions",
        "propertyName": "_POSTGRES_SAVE_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-postgres-save-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_SAVE_OPTIONS_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-postgres-saveOptionsKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_SAVE_OPTIONS_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-postgres-saveOptionsValue"
          }
        ]
      }
    ]
  },
  {
    "name": "Kafka",
    "modelType": "Kafka",
    "description": {
      "short": "Apache Kafka is publish-subscribe messaging rethought as a distributed commit log.",
      "long": "There is available in Sparta, a Kafka 0.10 fork made by Stratio using the Spark 1.6 profile to support security: https://github.com/Stratio/spark-kafka",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-Kafka"
    },
    "properties": [
      {
        "propertyId": "metadata.broker.list",
        "propertyName": "_METADATA_BROKER_LIST_",
        "propertyType": "list",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "Kafka host/port to connect",
        "qa": "fragment-details-kafka-metadata-broker-list",
        "fields": [
          {
            "propertyId": "host",
            "propertyName": "_HOST_",
            "propertyType": "text",
            "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
            "default": "localhost",
            "required": true,
            "tooltip": "Kafka's address.",
            "hidden": false,
            "qa": "fragment-details-kafka-host"
          },
          {
            "propertyId": "port",
            "propertyName": "_PORT_",
            "propertyType": "text",
            "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
            "default": "9092",
            "required": true,
            "tooltip": "Kafka's port.",
            "hidden": false,
            "qa": "fragment-details-kafka-port"
          }
        ]
      },
      {
        "propertyId": "serializer.class",
        "propertyName": "_SERIALIZER_",
        "propertyType": "text",
        "regexp": "",
        "default": "kafka.serializer.StringEncoder",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-kafka-serializer-class"
      },
      {
        "propertyId": "request.required.acks",
        "propertyName": "_REQUIRED_ACKS_",
        "propertyType": "boolean",
        "regexp": "true|false",
        "default": false,
        "required": false,
        "tooltip": "Specifies whether the producer waits for an acknowledgment from the broker.",
        "qa": "fragment-details-kafka-request-required-acks"
      },
      {
        "propertyId": "producer.type",
        "propertyName": "_PRODUCER_TYPE_",
        "propertyType": "text",
        "regexp": "async|sync",
        "default": "async",
        "required": true,
        "tooltip": "Specifies whether the messages are sent asynchronously in a background thread. Set to sync by default",
        "qa": "fragment-details-kafka-producer-type"
      },
      {
        "propertyId": "batch.num.messages",
        "propertyName": "_BATCH_NUM_MESSAGES_",
        "propertyType": "text",
        "regexp": "[0-9]+",
        "default": "200",
        "required": true,
        "tooltip": "The number of messages to send in one batch when using async mode",
        "qa": "fragment-details-kafka-batch-num-messages"
      },
      {
        "propertyId": "kafkaProperties",
        "propertyName": "_KAFKA_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "fragment-details-kafka-properties",
        "fields": [
          {
            "propertyId": "kafkaPropertyKey",
            "propertyName": "_KAFKA_PROPERTY_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-kafka-kafkaPropertyKey"
          },
          {
            "propertyId": "kafkaPropertyValue",
            "propertyName": "_KAFKA_PROPERTY_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "fragment-details-kafka-kafkaPropertyValue"
          }
        ]
      }
    ]
  },
  {
    "name": "Redis",
    "modelType": "Redis",
    "description": {
      "short": "The output of Redis doesnt use the generic implementation with DataFrames.",
      "long": "Redis is an open source (BSD licensed), in-memory data structure store, used as database, cache and message broker.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-Redis"
    },
    "properties": [
      {
        "propertyId": "hostname",
        "propertyName": "_HOST_",
        "propertyType": "text",
        "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
        "default": "localhost",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-redis-hostname"
      },
      {
        "propertyId": "port",
        "propertyName": "_PORT_",
        "propertyType": "text",
        "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
        "default": "6379",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-redis-port"
      }
    ]
  },
  {
    "name": "Http",
    "modelType": "Http",
    "description": {
      "short": "Enables you to do POST requests to a certain URL",
      "long": "Enables you to do an HTTP POST request to a URL specifying if the data is to be passed through format with a parameter name or attached in the request body.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-HTTPPost"
    },
    "properties": [
      {
        "propertyId": "url",
        "propertyName": "_URL_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-http-url"
      },
      {
        "propertyId": "connTimeout",
        "propertyName": "_CONN_TIMEOUT_",
        "propertyType": "text",
        "regexp": "",
        "default": 1000,
        "required": false,
        "tooltip": "Value for the connection timeout. Default to 1000ms.",
        "qa": "fragment-details-http-output-conn-timeout"
      },
      {
        "propertyId": "readTimeout",
        "propertyName": "_READ_TIMEOUT_",
        "propertyType": "text",
        "regexp": "",
        "default": 5000,
        "required": false,
        "tooltip": "Value for the read timeout. Default to 5000ms.",
        "qa": "fragment-details-http-output-read-timeout"
      },
      {
        "propertyId": "outputFormat",
        "propertyName": "_OUTPUT_FORMAT_",
        "propertyType": "select",
        "regexp": "json|row",
        "values": [
          {
            "label": "Json",
            "value": "json"
          },
          {
            "label": "Row",
            "value": "row"
          }
        ],
        "default": "json",
        "required": true,
        "tooltip": "Sets whether the output should be given as Json or as a row of String values",
        "qa": "fragment-details-http-output-format"
      },
      {
        "propertyId": "delimiter",
        "propertyName": "_DELIMITER_",
        "propertyType": "text",
        "tooltip": "Only eligible if Output Format is set to Row. Any character is accepted except: \\ \" #",
        "regexp": "[^\"#\\\\]",
        "maxLength": "1",
        "default": ",",
        "trim": false,
        "required": false,
        "qa": "fragment-details-http-delimiter"
      },
      {
        "propertyId": "postType",
        "propertyName": "_POST_TYPE_",
        "propertyType": "select",
        "regexp": "body|parameter",
        "values": [
          {
            "label": "Body",
            "value": "body"
          },
          {
            "label": "Parameter",
            "value": "parameter"
          }
        ],
        "default": "body",
        "required": true,
        "tooltip": "Sets whether the data should be send in the body or as a named parameter in a form",
        "qa": "fragment-details-http-post-type"
      },
      {
        "propertyId": "parameterName",
        "propertyName": "_PARAMETER_NAME_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": false,
        "tooltip": "Valid only if Post Type is set to parameter. Value entered will be used a key name.",
        "qa": "fragment-details-http-parameter-name"
      }
    ]
  },
  {
    "name": "Print",
    "modelType": "Print",
    "description": {
      "short": "Print the number of elements, schemas and data",
      "long": "Print output uses the generic implementation with DataFrames, this implementation print each dataframe with its schema.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/Outputs#Outputs-Print"
    },
    "properties": [
      {
        "propertyId": "printMetadata",
        "propertyName": "_PRINT_META_DATA_",
        "propertyType": "boolean",
        "default": true,
        "required": false,
        "tooltip": "Specifies if the metadata is printed by the logger depending on the level set",
        "qa": "fragment-details-print-printMetadata"
      },
      {
        "propertyId": "printData",
        "propertyName": "_PRINT_DATA_",
        "propertyType": "boolean",
        "default": false,
        "required": false,
        "tooltip": "Specifies if the data is printed by the logger depending on the level set",
        "qa": "fragment-details-print-printData"
      },
      {
        "propertyId": "printSchema",
        "propertyName": "_PRINT_SCHEMA_",
        "propertyType": "boolean",
        "default": false,
        "required": false,
        "tooltip": "Specifies if the schema is printed by the logger depending on the level set",
        "qa": "fragment-details-print-printSchema"
      },
      {
        "propertyId": "logLevel",
        "propertyName": "_LOG_LEVEL_",
        "propertyType": "select",
        "regexp": "info|error|warn",
        "values": [
          {
            "label": "Warning",
            "value": "warn"
          },
          {
            "label": "Error",
            "value": "error"
          },
          {
            "label": "Info",
            "value": "info"
          }
        ],
        "default": "warn",
        "required": true,
        "tooltip": "Sets the log level when printing the data",
        "qa": "fragment-details-output-print-logLevel"
      }
    ]
  },
  {
    "name": "Custom",
    "modelType": "Custom",
    "description": {
      "short": "Custom output defined by user",
      "long": "User can extend the Sparta SDK with his own implementation of Input class",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARTA0x11/SDK"
    },
    "properties": [
      {
        "propertyId": "modelType",
        "propertyName": "_MODEL_TYPE_",
        "propertyType": "text",
        "default": "Custom",
        "required": true,
        "tooltip": "Output type is related to the user class extended by SDK",
        "qa": "custom-output-modelType"
      },
      {
        "propertyId": "saveOptions",
        "propertyName": "_OPTION_PROPERTIES_",
        "propertyType": "list",
        "default": "",
        "required": false,
        "tooltip": "",
        "qa": "custom-output-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_OPTION_KEY_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "custom-output-properties-key"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_OPTION_VALUE_",
            "propertyType": "text",
            "regexp": "",
            "default": "",
            "hidden": false,
            "required": false,
            "qa": "custom-output-properties-value"
          }
        ]
      }
    ]
  }
]
