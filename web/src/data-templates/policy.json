{
  "steps": [{
      "name": "_POLICY_._STEPS_._SETTINGS_",
      "icon": "icon-cog",
      "currentMessage": "_MESSAGE_._SETTINGS_STEP_",
      "availableMessage": "_MESSAGE_._SETTINGS_STEP_AVAILABLE_",
      "order": 0,
      "number": 0
    },
    {
      "name": "_POLICY_._STEPS_._INPUT_",
      "icon": "icon-input",
      "currentMessage": "_MESSAGE_._INPUT_STEP_",
      "availableMessage": "_MESSAGE_._INPUT_STEP_AVAILABLE_",
      "order": 1,
      "number": 1
    },
    {
      "name": "_POLICY_._STEPS_._TRANSFORMATION_",
      "icon": "icon-evolution",
      "currentMessage": "_MESSAGE_._TRANSFORMATION_STEP_",
      "availableMessage": "_MESSAGE_._TRANSFORMATION_STEP_AVAILABLE_",
      "order": 2,
      "number": 2,
      "isSubStep": true
    },
    {
      "name": "_POLICY_._STEPS_._RAW_",
      "icon": "icon-input",
      "currentMessage": "_MESSAGE_._RAW_STEP_",
      "availableMessage": "_MESSAGE_._RAW_STEP_AVAILABLE_",
      "isLastStep": true,
      "isSubStep": true,
      "order": 2,
      "number": 3
    }, {
      "name": "_POLICY_._STEPS_._TRIGGERS_",
      "icon": "icon-bell",
      "currentMessage": "_MESSAGE_._TRIGGER_STEP_",
      "availableMessage": "_MESSAGE_._TRIGGER_STEP_AVAILABLE_",
      "order": 3,
      "number": 4,
      "isSubStep": true,
      "isLastStep": true
    },
    {
      "name": "_POLICY_._STEPS_._CUBES_",
      "icon": "icon-box",
      "currentMessage": "_MESSAGE_._CUBE_STEP_",
      "availableMessage": "_MESSAGE_._CUBE_STEP_AVAILABLE_",
      "order": 3,
      "number": 5,
      "isSubStep": true,
      "isLastStep": true
    }
  ],
  "basicSettings": [{
      "propertyId": "name",
      "propertyName": "_NAME_",
      "propertyType": "text",
      "required": true,
      "qa": "policy-name",
      "col": 5
    },
    {
      "propertyId": "description",
      "propertyName": "_DESCRIPTION_",
      "propertyType": "text",
      "required": true,
      "qa": "policy-description",
      "col": 7
    }
  ],
  "advancedSettings": [{
      "propertyId": "driverUri",
      "propertyName": "_DRIVER_URI_",
      "width": 6,
      "position": "left",
      "propertyType": "text",
      "required": false,
      "tooltip": "Path to the driver jar file (hdfs, http or local URIs).",
      "qa": "policy-driver-uri"
    },
    {
      "propertyId": "executionMode",
      "propertyName": "_EXECUTION_MODE_",
      "width": 6,
      "position": "right",
      "required": false,
      "propertyType": "select",
      "regexp": "local|mesos|marathon",
      "values": [
        {
          "label": "Local",
          "value": "local"
        },
        {
          "label": "Mesos",
          "value": "mesos"
        },
        {
          "label": "Marathon",
          "value": "marathon"
        }
      ],
      "tooltip": "Execution mode when the policy is launched, if nothing is selected Sparta will use the values in the configuration file.",
      "qa": "policy-execution-mode"
    },
    {
      "propertyId": "streamTemporalTable",
      "propertyName": "_TEMPORAL_TABLE_TRANSFORMATIONS_",
      "width": 6,
      "position": "left",
      "propertyType": "text",
      "default": "stream",
      "required": false,
      "tooltip": "Temporal table name assigned to the transformed data, this temporal table is available in triggers, example 'select * from stream' when the value is 'stream'",
      "qa": "policy-temporal-table-name"
    },
    {
      "propertyId": "storageLevel",
      "propertyName": "_STORAGELEVEL_",
      "propertyType": "select",
      "required": true,
      "default": "MEMORY_ONLY_SER",
      "width": 6,
      "position": "right",
      "tooltip": "Default Storage Level assigned to Spark Streaming batches.",
      "qa": "policy-storage-level",
      "values": [{
          "label": "DISK_ONLY",
          "value": "DISK_ONLY"
        },
        {
          "label": "DISK_ONLY_2",
          "value": "DISK_ONLY_2"
        },
        {
          "label": "MEMORY_ONLY",
          "value": "MEMORY_ONLY"
        },
        {
          "label": "MEMORY_ONLY_2",
          "value": "MEMORY_ONLY_2"
        },
        {
          "label": "MEMORY_ONLY_SER",
          "value": "MEMORY_ONLY_SER"
        },
        {
          "label": "MEMORY_ONLY_SER_2",
          "value": "MEMORY_ONLY_SER_2"
        },
        {
          "label": "MEMORY_AND_DISK",
          "value": "MEMORY_AND_DISK"
        },
        {
          "label": "MEMORY_AND_DISK_2",
          "value": "MEMORY_AND_DISK_2"
        },
        {
          "label": "MEMORY_AND_DISK_SER",
          "value": "MEMORY_AND_DISK_SER"
        },
        {
          "label": "MEMORY_AND_DISK_SER_2",
          "value": "MEMORY_AND_DISK_SER_2"
        }
      ]
    },
    {
      "propertyId": "sparkStreamingWindowNumber",
      "propertyName": "_SPARK_STREAMING_WINDOW_",
      "propertyType": "number",
      "default": 6,
      "width": 6,
      "position": "left",
      "tooltip": "Streaming window assigned to Spark Streaming.",
      "required": true,
      "qa": "policy-spark-streaming-window-sparkStreamingWindowNumber"
    },
    {
      "propertyId": "sparkStreamingWindowTime",
      "propertyName": "_WHITE_SPACE_",
      "propertyType": "select",
      "width": 6,
      "position": "right",
      "qa": "policy-spark-streaming-window-sparkStreamingWindowTime",
      "default": "s",
      "required": true,
      "values": [{
          "label": "Milliseconds",
          "value": "ms"
        },
        {
          "label": "Seconds",
          "value": "s"
        },
        {
          "label": "Minutes",
          "value": "m"
        },
        {
          "label": "Hours",
          "value": "h"
        },
        {
          "label": "Days",
          "value": "d"
        },
        {
          "label": "Week(s)",
          "value": "w"
        }
      ]
    },
    {
      "propertyId": "rememberNumber",
      "propertyName": "_POLICY_REMEMBER_FIELD_",
      "propertyType": "number",
      "width": 6,
      "position": "left",
      "tooltip": "Maximum time a certain query will be executed before being aborted.",
      "required": "scope.form['dataSourcerememberTimeForm']['dataSourcerememberTimeForm'].$modelValue.length > 0",
      "qa": "policy-remember-number"
    },
    {
      "propertyId": "rememberTime",
      "propertyName": "_WHITE_SPACE_",
      "propertyType": "select",
      "width": 6,
      "position": "right",
      "qa": "policy-remember-time",
      "required": "scope.form['dataSourcerememberNumberForm']['dataSourcerememberNumberForm'].$modelValue",
      "values": [{
          "label": "Milliseconds",
          "value": "ms"
        },
        {
          "label": "Seconds",
          "value": "s"
        },
        {
          "label": "Minutes",
          "value": "m"
        },
        {
          "label": "Hours",
          "value": "h"
        },
        {
          "label": "Days",
          "value": "d"
        },
        {
          "label": "Week(s)",
          "value": "w"
        }
      ]
    },
    {
      "propertyId": "monitoringLink",
      "propertyName": "_MONITORING_LINK_",
      "width": 6,
      "position": "left",
      "propertyType": "text",
      "required": false,
      "tooltip": "User defined URI to monitoring policies when is launched in the polices view ",
      "qa": "monitoring-link"
    },
    {
      "propertyId": "checkpointPath",
      "propertyName": "_CHECKPOINT_PATH_",
      "width": 6,
      "position": "right",
      "propertyType": "text",
      "required": false,
      "tooltip": "Checkpoint path in HDFS used when launching policies in cluster mode over SparkStandAlone, Mesos or Yarn.",
      "qa": "checkpoint-path"
    },
    {
      "propertyId": "autoDeleteCheckpoint",
      "propertyName": "_AUTO_DELETE_CHECKPOINT_",
      "width": 6,
      "position": "left",
      "propertyType": "boolean",
      "required": false,
      "tooltip": "Auto delete checkpoint path in HDFS when running policies. Overrides the value in the configuration file.",
      "qa": "auto-delete-checkpoint"
    },
    {
      "propertyId": "addTimeToCheckpointPath",
      "propertyName": "_ADD_TIME_TO_CHECKPOINT_",
      "width": 6,
      "position": "right",
      "propertyType": "boolean",
      "required": false,
      "tooltip": "Add the current time to checkpoint path. Be careful if you need HA in your streaming process.",
      "qa": "auto-delete-checkpoint"
    },
    {
      "propertyId": "stopGracefully",
      "propertyName": "_STOP_GRACEFULLY_",
      "propertyType": "boolean",
      "width": 6,
      "position": "left",
      "tooltip": "Stop gracefully the spark streaming context when running in cluster mode. Overrides the value in the configuration file.",
      "qa": "policy-stop-gracefully"
    },
    {
      "propertyId": "sparkConf",
      "propertyName": "_SPARK_CONF_",
      "propertyType": "list",
      "default": "",
      "required": false,
      "tooltip": "Spark configuration properties. Values set here will override the ones set in the configuration file.",
      "qa": "policy-spark-conf",
      "fields": [{
          "propertyId": "sparkConfKey",
          "propertyName": "_SPARK_CONF_KEY_",
          "position": "left",
          "propertyType": "text",
          "regexp": "",
          "default": "",
          "hidden": false,
          "required": false,
          "tooltip": "Spark configuration property with the structure spark.xxx",
          "qa": "policy-sparkConfKey"
        },
        {
          "propertyId": "sparkConfValue",
          "propertyName": "_SPARK_CONF_VALUE_",
          "position": "right",
          "propertyType": "text",
          "regexp": "",
          "default": "",
          "hidden": false,
          "required": false,
          "qa": "policy-sparkConfValue"
        }
      ]
    },
    {
      "propertyId": "sparkSubmitArguments",
      "propertyName": "_SPARK_SUBMIT_ARGUMENTS_",
      "propertyType": "list",
      "default": "",
      "required": false,
      "tooltip": "Spark submit arguments added when the policy is executed on a Spark cluster. Values set here will override the property file options",
      "qa": "policy-spark-submit-argument",
      "fields": [{
          "propertyId": "submitArgument",
          "propertyName": "_SPARK_SUBMIT_ARGUMENT_",
          "position": "left",
          "propertyType": "text",
          "regexp": "",
          "default": "",
          "hidden": false,
          "required": false,
          "tooltip": "Spark submit argument with the structure --xxx",
          "qa": "policy-spark-submit-argument-key"
        },
        {
          "propertyId": "submitValue",
          "propertyName": "_SPARK_SUBMIT_ARGUMENT_VALUE_",
          "position": "right",
          "propertyType": "text",
          "regexp": "",
          "default": "",
          "hidden": false,
          "required": false,
          "qa": "policy-spark-submit-argument-value"
        }
      ]
    },
    {
      "propertyId": "initSqlSentences",
      "propertyName": "_SQL_SENTENCES_",
      "propertyType": "list",
      "default": "",
      "required": false,
      "tooltip": "SQL sentences that will be executed when the policy starts. It's useful when the user needs to registry temporal/master tables from external datasources. Once launched it's possible to mix them inside the triggers",
      "qa": "policy-sql-sentences",
      "fields": [{
        "propertyId": "sentence",
        "propertyName": "_SQL_SENTENCE_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "hidden": false,
        "required": false,
        "tooltip": "SQL sentence",
        "qa": "policy-sql-sentence"
      }]
    },
    {
      "propertyId": "userPluginsJars",
      "propertyName": "_USER_PLUGINS_JARS_",
      "propertyType": "list",
      "default": "",
      "required": false,
      "tooltip": "User Jars with plugins that will be used in the Spark Jobs. It's possible to add library jars or Sparta plugins that extend the Sparta SDK",
      "qa": "policy-user-plugins-jars",
      "fields": [{
        "propertyId": "jarPath",
        "propertyName": "_JAR_PATH",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "hidden": false,
        "required": false,
        "qa": "policy-jar-path"
      }]
    }
  ],
  "helpLinks": [
    "https://stratio.atlassian.net/wiki/display/SPARTA1x1x2/Create+and+Submit+Policy",
    "https://stratio.atlassian.net/wiki/display/SPARTA1x1x2/Inputs",
    "https://stratio.atlassian.net/wiki/display/SPARTA1x1x2/Transformations",
    "https://stratio.atlassian.net/wiki/display/SPARTA1x1x2/Raw+data",
    "https://stratio.atlassian.net/wiki/display/SPARTA1x1x2/Triggers",
    "https://stratio.atlassian.net/wiki/display/SPARTA1x1x2/Cubes"
  ],
  "model": {
    "types": [{
        "iconName": "ingestion",
        "name": "Ingestion"
      },
      {
        "iconName": "filter",
        "name": "Filter"
      },
      {
        "iconName": "json",
        "name": "Json"
      },
      {
        "iconName": "xml",
        "name": "Xml"
      },
      {
        "iconName": "csv",
        "name": "Csv"
      },
      {
        "iconName": "kite",
        "name": "Morphlines"
      },
      {
        "iconName": "datetime",
        "name": "DateTime"
      },
      {
        "iconName": "globe",
        "name": "Geo"
      },
      {
        "iconName": "puzzle",
        "name": "Custom"
      }
    ],
    "defaultOutputFieldTypes": [{
        "label": "String",
        "value": "string"
      },
      {
        "label": "Long",
        "value": "long"
      },
      {
        "label": "Double",
        "value": "double"
      },
      {
        "label": "Integer",
        "value": "integer"
      },
      {
        "label": "Boolean",
        "value": "boolean"
      },
      {
        "label": "Date",
        "value": "date"
      },
      {
        "label": "Datetime",
        "value": "datetime"
      },
      {
        "label": "Timestamp",
        "value": "timestamp"
      },
      {
        "label": "Array Double",
        "value": "arraydouble"
      },
      {
        "label": "Array String",
        "value": "arraystring"
      }
    ],
    "defaultInput": {
      "label": "_attachment_body",
      "value": "_attachment_body"
    },
    "Ingestion": {
      "properties": [{
          "propertyId": "whenError",
          "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
          "propertyType": "select",
          "values": [{
              "label": "Error",
              "value": "Error"
            },
            {
              "label": "Discard",
              "value": "Discard"
            },
            {
              "label": "Null",
              "value": "Null"
            }
          ],
          "position": "left",
          "width": 6,
          "default": "Error",
          "required": true,
          "qa": "policy-transformation-ingestion-whenError"
        },
        {
          "propertyId": "removeInputField",
          "propertyName": "_REMOVE_INPUT_FIELD_",
          "propertyType": "boolean",
          "position": "left",
          "width": 6,
          "default": false,
          "required": false,
          "tooltip": "If checked, the input field will be removed and won't be available for the following transformations.",
          "qa": "policy-transformation-xml-removeInputField"
        }
      ]
    },
    "Json": {
      "properties": [{
          "propertyId": "whenError",
          "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
          "propertyType": "select",
          "values": [{
              "label": "Error",
              "value": "Error"
            },
            {
              "label": "Discard",
              "value": "Discard"
            },
            {
              "label": "Null",
              "value": "Null"
            }
          ],
          "position": "left",
          "width": 6,
          "default": "Error",
          "required": true,
          "qa": "policy-transformation-json-whenError"
        },
        {
          "propertyId": "removeInputField",
          "propertyName": "_REMOVE_INPUT_FIELD_",
          "propertyType": "boolean",
          "position": "left",
          "width": 6,
          "default": false,
          "required": false,
          "tooltip": "If checked, the input field will be removed and won't be available for the following transformations.",
          "qa": "policy-transformation-json-removeInputField"
        }
      ],
      "defaultConfiguration": {
        "queries": [{
            "field": "field1",
            "query": "$.field1-in-json"
          },
          {
            "field": "field2",
            "query": "$.field2-in-json"
          }
        ]
      }
    },
    "Csv": {
      "properties": [{
          "propertyId": "whenError",
          "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
          "propertyType": "select",
          "values": [{
              "label": "Error",
              "value": "Error"
            },
            {
              "label": "Discard",
              "value": "Discard"
            },
            {
              "label": "Null",
              "value": "Null"
            }
          ],
          "position": "left",
          "width": 6,
          "default": "Error",
          "required": true,
          "qa": "policy-transformation-csv-whenError"
        },
        {
          "propertyId": "delimiter",
          "propertyName": "_CSV_DELIMITER_",
          "propertyType": "text",
          "position": "left",
          "width": 6,
          "default": ",",
          "required": false,
          "qa": "policy-transformation-csv-delimiter"
        },
        {
          "propertyId": "removeInputField",
          "propertyName": "_REMOVE_INPUT_FIELD_",
          "propertyType": "boolean",
          "position": "left",
          "width": 6,
          "default": false,
          "required": false,
          "tooltip": "If checked, the input field will be removed and won't be available for the following transformations.",
          "qa": "policy-transformation-json-removeInputField"
        }
      ],
      "defaultConfiguration": {
        "fields": [{
            "name": "field1"
          },
          {
            "name": "field2"
          }
        ]
      }
    },
    "Filter": {
      "properties": [{
        "propertyId": "whenError",
        "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
        "propertyType": "select",
        "values": [{
            "label": "Error",
            "value": "Error"
          },
          {
            "label": "Discard",
            "value": "Discard"
          },
          {
            "label": "Null",
            "value": "Null"
          }
        ],
        "position": "left",
        "width": 6,
        "default": "Error",
        "required": true,
        "qa": "policy-transformation-filter-whenError"
      }],
      "defaultConfiguration": {
        "tooltip": "A previously defined transformation is required in order to define filtering rules over a given field.",
        "filters": [{
            "field": "field1",
            "type": "<",
            "value": 1
          },
          {
            "field": "field2",
            "type": "=",
            "value": "sparta"
          }
        ]
      }
    },
    "Xml": {
      "properties": [{
          "propertyId": "whenError",
          "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
          "propertyType": "select",
          "values": [{
              "label": "Error",
              "value": "Error"
            },
            {
              "label": "Discard",
              "value": "Discard"
            },
            {
              "label": "Null",
              "value": "Null"
            }
          ],
          "position": "left",
          "width": 6,
          "default": "Error",
          "required": true,
          "qa": "policy-transformation-xml-whenError"
        },
        {
          "propertyId": "removeInputField",
          "propertyName": "_REMOVE_INPUT_FIELD_",
          "propertyType": "boolean",
          "position": "left",
          "width": 6,
          "default": false,
          "required": false,
          "tooltip": "If checked, the input field will be removed and won't be available for the following transformations.",
          "qa": "policy-transformation-xml-removeInputField"
        }
      ],
      "defaultConfiguration": {
        "queries": [{
            "field": "field1",
            "query": "//element_path/@field1_in_xml"
          },
          {
            "field": "field2",
            "query": "//element_path/@field1_in_xml"
          }
        ]
      }
    },
    "Morphlines": {
      "properties": [{
          "propertyId": "whenError",
          "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
          "propertyType": "select",
          "values": [{
              "label": "Error",
              "value": "Error"
            },
            {
              "label": "Discard",
              "value": "Discard"
            },
            {
              "label": "Null",
              "value": "Null"
            }
          ],
          "position": "left",
          "width": 6,
          "default": "Error",
          "required": true,
          "qa": "policy-transformation-morphline-whenError"
        },
        {
          "propertyId": "removeInputField",
          "propertyName": "_REMOVE_INPUT_FIELD_",
          "propertyType": "boolean",
          "position": "left",
          "width": 6,
          "default": false,
          "required": false,
          "tooltip": "If checked, the input field will be removed and won't be available for the following transformations.",
          "qa": "policy-transformation-morphlines-removeInputField"
        }
      ],
      "defaultConfiguration": {
        "morphline": {
          "id": "morphline1",
          "importCommands": [
            "org.kitesdk.**"
          ],
          "commands": [{
              "readJson": {}
            },
            {
              "extractJsonPaths": {
                "paths": {
                  "field1": "/field-in-json1",
                  "field2": "/field-in-json2"
                }
              }
            }
          ]
        }
      }
    },
    "DateTime": {
      "properties": [{
          "propertyId": "inputFormat",
          "propertyName": "_INPUT_FORMAT_",
          "propertyType": "select",
          "qa": "policy-model-dateTime-inputFormat",
          "values": [{
              "label": "Unix",
              "value": "unix"
            },
            {
              "label": "Unix millis",
              "value": "unixMillis"
            },
            {
              "label": "yyyy-MM-dd HH:mm:ss",
              "value": "hive"
            },
            {
              "label": "Auto generated",
              "value": "autoGenerated"
            },
            {
              "label": "yyyyMMdd",
              "value": "basicDate"
            },
            {
              "label": "yyyyMMdd'T'HHmmss.SSSZ",
              "value": "basicDateTime"
            },
            {
              "label": "yyyyMMdd'T'HHmmssZ",
              "value": "basicDateTimeNoMillis"
            },
            {
              "label": "yyyyDDD",
              "value": "basicOrdinalDate"
            },
            {
              "label": "yyyyDDD'T'HHmmss.SSSZ",
              "value": "basicOrdinalDateTime"
            },
            {
              "label": "yyyyDDD'T'HHmmssZ",
              "value": "basicOrdinalDateTimeNoMillis"
            },
            {
              "label": "HHmmss.SSSZ",
              "value": "basicTime"
            },
            {
              "label": "HHmmssZ",
              "value": "basicTimeNoMillis"
            },
            {
              "label": "'T'HHmmss.SSSZ",
              "value": "basicTTime"
            },
            {
              "label": "'T'HHmmssZ",
              "value": "basicTTimeNoMillis"
            },
            {
              "label": "xxxx'W'wwe",
              "value": "basicWeekDate"
            },
            {
              "label": "xxxx'W'wwe'T'HHmmss.SSSZ",
              "value": "basicWeekDateTime"
            },
            {
              "label": "xxxx'W'wwe'T'HHmmssZ",
              "value": "basicWeekDateTimeNoMillis"
            },
            {
              "label": "yyyy-MM-dd",
              "value": "date"
            },
            {
              "label": "yyyy-MM-dd'T'HH:mm:ss.SSS",
              "value": "dateHourMinuteSecondMillis"
            },
            {
              "label": "yyyy-MM-dd'T'HH:mm:ss.SSSZZ",
              "value": "dateTime"
            },
            {
              "label": "yyyy-MM-dd'T'HH:mm:ssZZ",
              "value": "dateTimeNoMillis"
            },
            {
              "label": "HH:mm:ss.SSS",
              "value": "hourMinuteSecondFraction"
            },
            {
              "label": "yyyy-DDD",
              "value": "ordinalDate"
            },
            {
              "label": "yyyy-DDD'T'HH:mm:ssZZ",
              "value": "ordinalDateTimeNoMillis"
            },
            {
              "label": "HH:mm:ss.SSSZZ",
              "value": "time"
            },
            {
              "label": "'T'HH:mm:ss.SSSZZ",
              "value": "tTime"
            },
            {
              "label": "'T'HH:mm:ssZZ",
              "value": "tTimeNoMillis"
            },
            {
              "label": "xxxx-'W'ww-e",
              "value": "weekDate"
            },
            {
              "label": "xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ",
              "value": "weekDateTime"
            },
            {
              "label": "xxxx-'W'ww-e'T'HH:mm:ssZZ",
              "value": "weekDateTimeNoMillis"
            }
          ],
          "default": "unixMillis",
          "required": true
        },
        {
          "propertyId": "granularityNumber",
          "propertyName": "_GRANULARITY_",
          "propertyType": "text",
          "position": "left",
          "required": false,
          "qa": "policy-cube-dimension-dateTime-granularityNumber"
        },
        {
          "propertyId": "granularityTime",
          "propertyName": "_WHITE_SPACE_",
          "propertyType": "select",
          "width": 6,
          "position": "right",
          "required": false,
          "qa": "policy-cube-dimension-dateTime-granularityTime",
          "values": [{
              "label": "Millisecond(s)",
              "value": "ms"
            },
            {
              "label": "Second(s)",
              "value": "s"
            },
            {
              "label": "Minute(s)",
              "value": "m"
            },
            {
              "label": "Hour(s)",
              "value": "h"
            },
            {
              "label": "Day(s)",
              "value": "d"
            },
            {
              "label": "Week(s)",
              "value": "w"
            },
            {
              "label": "Millisecond",
              "value": "millisecond"
            },
            {
              "label": "Second",
              "value": "second"
            },
            {
              "label": "Minute",
              "value": "minute"
            },
            {
              "label": "Hour",
              "value": "hour"
            },
            {
              "label": "Day",
              "value": "day"
            },
            {
              "label": "Week",
              "value": "week"
            },
            {
              "label": "Month",
              "value": "month"
            },
            {
              "label": "Year",
              "value": "year"
            }
          ]
        },
        {
          "propertyId": "whenError",
          "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
          "propertyType": "select",
          "values": [{
              "label": "Error",
              "value": "Error"
            },
            {
              "label": "Discard",
              "value": "Discard"
            },
            {
              "label": "Null",
              "value": "Null"
            }
          ],
          "position": "left",
          "width": 6,
          "default": "Error",
          "required": true,
          "qa": "policy-transformation-datetime-whenError"
        },
        {
          "propertyId": "removeInputField",
          "propertyName": "_REMOVE_INPUT_FIELD_",
          "propertyType": "boolean",
          "position": "left",
          "width": 6,
          "default": false,
          "required": false,
          "tooltip": "If checked, the input field will be removed and won't be available for the following transformations.",
          "qa": "policy-transformation-datetime-removeInputField"
        }
      ]
    },
    "Geo": {
      "properties": [{
          "propertyId": "latitude",
          "propertyName": "_LATITUDE_",
          "propertyType": "text",
          "position": "left",
          "width": 6,
          "default": "lat",
          "required": true,
          "qa": "policy-transformation-geo-latitude"
        },
        {
          "propertyId": "longitude",
          "propertyName": "_LONGITUDE_",
          "propertyType": "text",
          "position": "right",
          "width": 6,
          "default": "long",
          "required": true,
          "qa": "policy-transformation-geo-longitude"
        },
        {
          "propertyId": "delimiter",
          "propertyName": "_GEO_DELIMITER_",
          "propertyType": "text",
          "position": "left",
          "width": 6,
          "default": "--",
          "required": true,
          "qa": "policy-transformation-geo-delimiter"
        },
        {
          "propertyId": "whenError",
          "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
          "propertyType": "select",
          "values": [{
              "label": "Error",
              "value": "Error"
            },
            {
              "label": "Discard",
              "value": "Discard"
            },
            {
              "label": "Null",
              "value": "Null"
            }
          ],
          "position": "left",
          "width": 6,
          "default": "Error",
          "required": true,
          "qa": "policy-transformation-geo-whenError"
        }
      ],
      "outputFieldTypes": [{
        "label": "String",
        "value": "string"
      }]
    },
    "Custom": {
      "properties": [{
          "propertyId": "modelType",
          "propertyName": "_MODEL_TYPE_",
          "propertyType": "text",
          "default": "Custom",
          "width": 4,
          "required": true,
          "tooltip": "Transformation type is related to the user class extended by SDK",
          "qa": "custom-transformation-modelType"
        },
        {
          "propertyId": "transformationOptions",
          "propertyName": "_OPTION_PROPERTIES_",
          "propertyType": "list",
          "default": "",
          "required": false,
          "tooltip": "",
          "width": 12,
          "qa": "custom-transformation-properties",
          "fields": [{
              "propertyId": "transformationOptionsKey",
              "propertyName": "_OPTION_KEY_",
              "propertyType": "text",
              "regexp": "",
              "default": "",
              "width": 6,
              "hidden": false,
              "required": false,
              "qa": "custom-transformation-properties-key"
            },
            {
              "propertyId": "transformationOptionsValue",
              "propertyName": "_OPTION_VALUE_",
              "propertyType": "text",
              "regexp": "",
              "default": "",
              "width": 6,
              "position": "right",
              "hidden": false,
              "required": false,
              "qa": "custom-transformation-properties-value"
            }
          ]
        }
      ]
    }
  },
  "cube": {
    "defaultName": "cube",
    "types": [{
        "label": "Default",
        "value": "Default"
      },
      {
        "label": "DateTime",
        "value": "DateTime"
      },
      {
        "label": "GeoHash",
        "value": "GeoHash"
      }
    ],
    "precisionOptions": [{
        "type": "GeoHash",
        "precisions": [{
            "label": "_PRECISION_1_",
            "value": "precision1"
          },
          {
            "label": "_PRECISION_2_",
            "value": "precision2"
          },
          {
            "label": "_PRECISION_3_",
            "value": "precision3"
          },
          {
            "label": "_PRECISION_4_",
            "value": "precision4"
          },
          {
            "label": "_PRECISION_5_",
            "value": "precision5"
          },
          {
            "label": "_PRECISION_6_",
            "value": "precision6"
          },
          {
            "label": "_PRECISION_7_",
            "value": "precision7"
          },
          {
            "label": "_PRECISION_8_",
            "value": "precision8"
          },
          {
            "label": "_PRECISION_9_",
            "value": "precision9"
          },
          {
            "label": "_PRECISION_10_",
            "value": "precision10"
          },
          {
            "label": "_PRECISION_11_",
            "value": "precision11"
          },
          {
            "label": "_PRECISION_12_",
            "value": "precision12"
          }
        ]
      },
      {
        "type": "Default",
        "precisions": []
      }
    ],
    "DateTime": [{
        "propertyId": "precisionNumber",
        "propertyName": "_PRECISION_",
        "propertyType": "text",
        "width": 6,
        "position": "left",
        "tooltip": "Sets the value used to group by the incoming data. Only valid if the metric chosen is  between Millisecon(s) and Day(s).",
        "required": false,
        "qa": "policy-cube-dimension-dateTime-precisionNumber"
      },
      {
        "propertyId": "precisionTime",
        "propertyName": "_WHITE_SPACE_",
        "propertyType": "select",
        "width": 6,
        "position": "right",
        "qa": "policy-cube-dimension-dateTime-precisionTime",
        "default": "minute",
        "required": true,
        "values": [{
            "label": "Millisecond(s)",
            "value": "ms"
          },
          {
            "label": "Second(s)",
            "value": "s"
          },
          {
            "label": "Minute(s)",
            "value": "m"
          },
          {
            "label": "Hour(s)",
            "value": "h"
          },
          {
            "label": "Day(s)",
            "value": "d"
          },
          {
            "label": "Week(s)",
            "value": "w"
          },
          {
            "label": "Millisecond",
            "value": "millisecond"
          },
          {
            "label": "Second",
            "value": "second"
          },
          {
            "label": "Minute",
            "value": "minute"
          },
          {
            "label": "Hour",
            "value": "hour"
          },
          {
            "label": "Day",
            "value": "day"
          },
          {
            "label": "Week",
            "value": "week"
          },
          {
            "label": "Month",
            "value": "month"
          },
          {
            "label": "Year",
            "value": "year"
          }
        ]
      },
      {
        "propertyId": "isTimeDimension",
        "propertyName": "_IS_TIME_DIMENSION_",
        "propertyType": "boolean",
        "required": false,
        "qa": "policy-cube-dimension-dateTime-isTimeDimension"
      },
      {
        "propertyId": "computeLastNumber",
        "propertyName": "_COMPUTE_LAST_",
        "propertyType": "number",
        "width": 6,
        "position": "left",
        "default": 10,
        "required": true,
        "qa": "policy-cube-dimension-dateTime-computeLastNumber",
        "visible": [
          [{
            "propertyId": "isTimeDimension",
            "value": true
          }]
        ]
      },
      {
        "propertyId": "computeLastTime",
        "propertyName": "_WHITE_SPACE_",
        "propertyType": "select",
        "width": 6,
        "position": "right",
        "tooltip": "Sets the time window for aggregation operations.",
        "qa": "policy-cube-dimension-dateTime-computeLastTime",
        "default": "m",
        "required": true,
        "values": [{
            "label": "Millisecond(s)",
            "value": "ms"
          },
          {
            "label": "Second(s)",
            "value": "s"
          },
          {
            "label": "Minute(s)",
            "value": "m"
          },
          {
            "label": "Hour(s)",
            "value": "h"
          },
          {
            "label": "Day(s)",
            "value": "d"
          },
          {
            "label": "Week(s)",
            "value": "w"
          }
        ],
        "visible": [
          [{
            "propertyId": "isTimeDimension",
            "value": true
          }]
        ]
      }
    ],
    "properties": [{
      "propertyId": "name",
      "propertyName": "_NAME_",
      "propertyType": "text",
      "required": true,
      "qa": "cube-name",
      "width": 12,
      "position": "left",
      "regexp": "^[a-zA-Z0-9 ]*$",
      "validateValue": "true",
      "invalidValues": [
        "select",
        "project",
        "group",
        "default",
        "by",
        "as",
        "filter",
        "where",
        "insert",
        "delete",
        "update",
        "where"
      ]
    }],
    "writer": {
      "properties": [{
          "propertyId": "tableName",
          "propertyName": "_TABLE_NAME_",
          "propertyType": "text",
          "required": false,
          "qa": "cube-tableName",
          "tooltip": "If is assigned the output data are saved in one table, topic or queue with this name, if is not assigned then the output name is the cube name",
          "position": "left",
          "width": 6
        },
        {
          "propertyId": "saveMode",
          "propertyName": "_SAVE_MODE_",
          "propertyType": "select",
          "required": true,
          "default": "Append",
          "qa": "cube-save-mode",
          "tooltip": "The save mode correspond with Spark save modes, but some outputs support upsert with primary key fields",
          "values": [{
              "label": "_APPEND_",
              "value": "Append"
            },
            {
              "label": "_ERROR_IF_EXISTS_",
              "value": "ErrorIfExists"
            },
            {
              "label": "_IGNORE_",
              "value": "Ignore"
            },
            {
              "label": "_OVERWRITE_",
              "value": "Overwrite"
            },
            {
              "label": "_UPSERT_",
              "value": "Upsert"
            }
          ],
          "width": 6,
          "position": "right"
        },
        {
          "propertyId": "partitionBy",
          "propertyName": "_PARTITION_BY_",
          "propertyType": "text",
          "regexp": "",
          "required": false,
          "position": "left",
          "width": 6,
          "tooltip": "Partition the output by one or more fields, separated by ','. This property is supported by outputs that write on file systems",
          "qa": "cube-partitionBy"
        },
        {
          "propertyId": "dateType",
          "propertyName": "_DATE_TYPE_",
          "propertyType": "select",
          "required": true,
          "default": "timestamp",
          "tooltip": "Before save the data, transform time fields to other type in order to prevent errors in some outputs",
          "qa": "cube-date-type",
          "values": [{
              "label": "_TIMESTAMP_",
              "value": "timestamp"
            },
            {
              "label": "_DATE_",
              "value": "date"
            },
            {
              "label": "_DATE_TIME_",
              "value": "datetime"
            },
            {
              "label": "_LONG_",
              "value": "long"
            },
            {
              "label": "_STRING_",
              "value": "string"
            }
          ],
          "width": 6,
          "position": "right"
        },
        {
          "propertyId": "primaryKey",
          "propertyName": "_TRIGGER_PRIMARY_KEY_",
          "propertyType": "text",
          "required": false,
          "qa": "primaryKey-cube",
          "tooltip": "Field or fields separated by tag ',' that indicate the primary key fields in the temporal table. This is useful when select upsert mode and save the data in MongoDb or Elasticsearch",
          "width": 6,
          "position": "left"
        }
      ]
    },
    "functionNames": [
      "Accumulator",
      "Count",
      "EntityCount",
      "FirstValue",
      "FullText",
      "LastValue",
      "Max",
      "Mean",
      "MeanAssociative",
      "Median",
      "Min",
      "Mode",
      "Range",
      "Stddev",
      "Sum",
      "Variance",
      "TotalEntityCount"
    ],
    "defaultOperatorConfiguration": {
      "inputField": "field1"
    }
  }
}
